/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Practicas;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arrivera
 */
public class InterfazFacturas extends javax.swing.JFrame {
    
    DefaultTableModel modelo;
    /**
     * Creates new form InterfazFacturas
     */
    public InterfazFacturas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablePrductos = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jlbSubtotal = new javax.swing.JLabel();
        jlbIsv = new javax.swing.JLabel();
        jlbTotal = new javax.swing.JLabel();
        txtSubtotal = new javax.swing.JTextField();
        txtIsv = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tablePrductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cantidad", "Prod", "Precio", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablePrductos);

        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnNuevo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jlbSubtotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlbSubtotal.setText("Subtotal");

        jlbIsv.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlbIsv.setText("ISV");

        jlbTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlbTotal.setText("Total");

        txtSubtotal.setText("0");
        txtSubtotal.setEnabled(false);

        txtIsv.setText("0");
        txtIsv.setEnabled(false);

        txtTotal.setText("0");
        txtTotal.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlbTotal)
                    .addComponent(jlbIsv)
                    .addComponent(jlbSubtotal)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSubtotal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtIsv)
                    .addComponent(txtTotal))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jlbSubtotal))
                    .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbIsv)
                    .addComponent(txtIsv, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbTotal)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        DialogNuevoModificar nuevo = new DialogNuevoModificar(this, true, false);
        nuevo.setVisible(true);
        if(nuevo.getRootPane() == null)
            return;

        String producto = nuevo.GetProducto();
        Double cantidad = Double.parseDouble(nuevo.GetCantidad());
        Double precio = Double.parseDouble(nuevo.GetPrecio());
        Double total = cantidad * precio;
        
        //cargar el modelo apartir de un vector
        modelo.addRow(CargarVector(cantidad,producto,precio,total));
        
        //Calcular valores
        CalcularTotales();
    }//GEN-LAST:event_btnNuevoActionPerformed

    Vector CargarVector(double cantidad, String producto, double precio, double total){
        Vector nuevoRegistro = new Vector();
        nuevoRegistro.addElement(cantidad);
        nuevoRegistro.addElement(producto);
        nuevoRegistro.addElement(precio);
        nuevoRegistro.addElement(total);
        return nuevoRegistro;
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        modelo = new DefaultTableModel(){
            
            public boolean isCellEditable(int row, int col){
                return false;
            }
        };
        
        //Manera estatica de agregar las columnas
//        String[] columnas = {"Cantidad","Nombre producto","Precio","Total"};
//        modelo = new DefaultTableModel(null, columnas);
//        
        //Columnas
        modelo.addColumn("Cantidad");
        modelo.addColumn("Nombre Producto");
        modelo.addColumn("Precio");
        modelo.addColumn("Total");
        
        tablePrductos.setModel(modelo);
        
        //Columnas de la cantidad
        tablePrductos.getColumnModel().getColumn(0).setMaxWidth(100);
        tablePrductos.getColumnModel().getColumn(0).setPreferredWidth(100);
        
        //Producto
        tablePrductos.getColumnModel().getColumn(1).setMaxWidth(400);
        tablePrductos.getColumnModel().getColumn(1).setPreferredWidth(400);
        
        //Esto
//        Vector fila  = new Vector();
//        fila.addElement(5);
//        fila.addElement("Coca Cola");
//        fila.addElement(20);
//        fila.addElement(5*20);
//        modelo.addRow(fila);
        
        //Es lo mismo que esto
//        List fila2 = new ArrayList();
//        fila2.add("Coca Cola");
//        fila2.add(20);
//        fila2.add(5);
//        fila2.add(5*20);
        
        //modelo.addRow(fila2.toArray());
        
    }//GEN-LAST:event_formWindowOpened

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        //Verificar que haya una fila seleccionada, sino retroalimentar al usuario que debe escoger alguna fila
        int indiceTabla = tablePrductos.getSelectedRow();
        if(indiceTabla == -1){
            JOptionPane.showMessageDialog(this, "Debe escoger un registro para editar","Registro incorrecto",JOptionPane.WARNING_MESSAGE);
            return;
        }
            
        //Extraer valores del modelo para setearlos en los componente del dialog al abrirse
        String Producto =  modelo.getValueAt(indiceTabla,1).toString();
        double cantidad = Double.parseDouble( modelo.getValueAt(indiceTabla,0).toString());
        double Precio = Double.parseDouble( modelo.getValueAt(indiceTabla,2).toString());
        
        //Crear instancia del dialog con un parametro extra para que cambie el valor del boton
        DialogNuevoModificar modificar = new DialogNuevoModificar(this, true, true);
        
        //Cargar los componentes del dialog a partir de los setters antes de que se abrá el Dialog
        modificar.setCantidad(String.valueOf(cantidad));
        modificar.setPrecio(String.valueOf(Precio));
        modificar.setProducto(Producto);
        
        //Abrir el dialog
        modificar.setVisible(true);
        
        //Una vez se cierra el dialog extraemos los datos que se modificaron y para volverlos a setear al modelo y actualiar la UI de jTable
        String producto = modificar.GetProducto();
        Double cantidadEditada = Double.parseDouble(modificar.GetCantidad());
        Double precio = Double.parseDouble(modificar.GetPrecio());
        Double total = cantidadEditada * precio;
      
        //setear valores en el modelo.
        modelo.setValueAt(cantidadEditada,indiceTabla,0 );
        modelo.setValueAt(producto,indiceTabla,1 );
        modelo.setValueAt(precio,indiceTabla,2 );
        modelo.setValueAt(total,indiceTabla,3 );
        
        //Calcular totales
        CalcularTotales();
        
        //Actualizar UI de Jtable
        tablePrductos.updateUI();
        
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        //Verificar que haya escogido una fila y sino retroalimentar al usuario
        int indiceTabla = tablePrductos.getSelectedRow();
        if(indiceTabla == -1){
            JOptionPane.showMessageDialog(this, "Debe escoger un registro para eliminar un registro","Registro incorrecto",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //Una vez verificamos que escogio una fila confirmamos con el usuario si desea eliminar el registro
        int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea eliminar este registro?");
        if(respuesta == 0){
            //Una vez escogido que si, removemos el registro del indice seleccionado del Jtable o Modelo.
           modelo.removeRow(indiceTabla);
           //Calculamos los totales
           CalcularTotales();
           //Actualizamos la UI
           tablePrductos.updateUI();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void CalcularTotales(){
        //tablePrductos.getModel();
        double total = 0.0;
        int totalFilas = modelo.getRowCount();
        
        for (int i = 0; i < totalFilas; i++) {
            total += Double.parseDouble(modelo.getValueAt(i, 3).toString());
        }
        
        double isv = total * 0.15;
        DecimalFormat decimalFormat = new DecimalFormat( "#.###" );
        String result = decimalFormat.format(isv);
        double resultado =  total + isv;
        txtSubtotal.setText(String.valueOf(total));
        txtIsv.setText(result);
        txtTotal.setText(String.valueOf(resultado));
        
        //tablePrductos.update(); para actualizar la tabla cuando se agreguen registros
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazFacturas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbIsv;
    private javax.swing.JLabel jlbSubtotal;
    private javax.swing.JLabel jlbTotal;
    private javax.swing.JTable tablePrductos;
    private javax.swing.JTextField txtIsv;
    private javax.swing.JTextField txtSubtotal;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
